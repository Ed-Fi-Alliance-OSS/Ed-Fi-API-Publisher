"use strict";(self.webpackChunked_fi_api_publisher=self.webpackChunked_fi_api_publisher||[]).push([[5146],{465:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var i=r(4848),t=r(8453);const o={},a="Configuration Store for SQL Server",s={id:"configurationstore/Sql-Server",title:"Configuration Store for SQL Server",description:"Enables management of individual connection settings with encryption support for securely storing keys and secrets using built-in support for symmetric key encryption in a SQL Server database.",source:"@site/docs/configurationstore/Sql-Server.md",sourceDirName:"configurationstore",slug:"/configurationstore/Sql-Server",permalink:"/Ed-Fi-API-Publisher/docs/configurationstore/Sql-Server",draft:!1,unlisted:!1,editUrl:"https://github.com/ed-fi-alliance-oss/Ed-Fi-API-Publisher/tree/gh-pages/pages/docs/docs/configurationstore/Sql-Server.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuration Store for PostgreSQL",permalink:"/Ed-Fi-API-Publisher/docs/configurationstore/PostgreSql"},next:{title:"API Connection Management",permalink:"/Ed-Fi-API-Publisher/docs/tech/API-Connection-Management"}},c={},d=[{value:"Create the Ed-Fi API Publisher Configuration Database",id:"create-the-ed-fi-api-publisher-configuration-database",level:2},{value:"Create the EdFiApiPublisher User",id:"create-the-edfiapipublisher-user",level:2},{value:"Create the Tables and Initialize Encryption Artifacts",id:"create-the-tables-and-initialize-encryption-artifacts",level:2},{value:"Create the Encryption User",id:"create-the-encryption-user",level:2},{value:"Create User-Defined Functions for Managing Encrypted Configuration Entries",id:"create-user-defined-functions-for-managing-encrypted-configuration-entries",level:2},{value:"Configure API Connections",id:"configure-api-connections",level:2},{value:"Configure API Publisher",id:"configure-api-publisher",level:2}];function l(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"configuration-store-for-sql-server",children:"Configuration Store for SQL Server"}),"\n",(0,i.jsx)(n.p,{children:"Enables management of individual connection settings with encryption support for securely storing keys and secrets using built-in support for symmetric key encryption in a SQL Server database."}),"\n",(0,i.jsx)(n.h2,{id:"create-the-ed-fi-api-publisher-configuration-database",children:"Create the Ed-Fi API Publisher Configuration Database"}),"\n",(0,i.jsxs)(n.p,{children:["The following script template provides you with the information needed to create the ",(0,i.jsx)(n.code,{children:"EdFi_API_Publisher_Configuration"})," database. Alternatively, you can perform this step manually using SSMS or through some other means and proceed with the next step."]}),"\n",(0,i.jsxs)(n.p,{children:["To provide parameters for the script, type ",(0,i.jsx)("kbd",{children:"Ctrl"}),"+",(0,i.jsx)("kbd",{children:"Shft"}),"+",(0,i.jsx)("kbd",{children:"M"})," in the SSMS query window before executing."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"\r\n-- IMPORTANT: Type Ctrl+Shft+M to enter parameters for the script.\r\n\r\n---------------------------------------------------------\r\n-- Create configuration database\r\n---------------------------------------------------------\r\nCREATE DATABASE [EdFi_API_Publisher_Configuration]\r\n ON PRIMARY ( NAME = N'EdFi_API_Publisher_Configuration', FILENAME = N'< DataFilePath, nvarchar, C:\\MSSQL\\MSSQL14.MSSQLSERVER\\MSSQL\\DATA\\EdFi_API_Publisher_Configuration.mdf >' )\r\n LOG ON ( NAME = N'EdFi_API_Publisher_Configuration_log', FILENAME = N'< LogFilePath, nvarchar, C:\\MSSQL\\MSSQL14.MSSQLSERVER\\MSSQL\\DATA\\EdFi_API_Publisher_Configuration_log.ldf >')\r\nGO\n"})}),"\n",(0,i.jsx)(n.h2,{id:"create-the-edfiapipublisher-user",children:"Create the EdFiApiPublisher User"}),"\n",(0,i.jsx)(n.p,{children:'The Ed-Fi ODS API Publisher is intended to use integrated security to connect to the configuration database. To that end, the process under which the publisher utility is executing should be a local or domain Windows identity with an associated SQL Server login named "EdFiOdsApiPublisher".'}),"\n",(0,i.jsxs)(n.p,{children:["To provide parameters for the script, type ",(0,i.jsx)("kbd",{children:"Ctrl"}),"+",(0,i.jsx)("kbd",{children:"Shft"}),"+",(0,i.jsx)("kbd",{children:"M"})," in the SSMS query window before executing."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- IMPORTANT: Type Ctrl+Shft+M to enter parameters for the script.\r\n\r\nUSE [master]\r\nGO\r\nCREATE LOGIN [<Domain or Machine Name, nvarchar, DOMAIN_OR_MACHINE>\\<User Name, nvarchar, WindowsUserName>] FROM WINDOWS WITH DEFAULT_DATABASE=[EdFi_API_Publisher_Configuration]\r\nGO\r\nUSE [EdFi_API_Publisher_Configuration]\r\nGO\r\nCREATE USER [EdFiApiPublisher] FOR LOGIN [<Domain or Machine Name, nvarchar, DOMAIN_OR_MACHINE>\\<User Name, nvarchar, WindowsUserName>]\r\nGO\r\nALTER ROLE [db_datareader] ADD MEMBER [EdFiApiPublisher]\r\nGO\r\nALTER ROLE [db_datawriter] ADD MEMBER [EdFiApiPublisher]\r\nGO\n"})}),"\n",(0,i.jsx)(n.h2,{id:"create-the-tables-and-initialize-encryption-artifacts",children:"Create the Tables and Initialize Encryption Artifacts"}),"\n",(0,i.jsx)(n.p,{children:"The following script will create the necessary configuration tables, certificate, and symmetric key needed to support the Ed-Fi ODS API Publisher's connection configuration management functionality."}),"\n",(0,i.jsxs)(n.p,{children:["To provide parameters for the script, type ",(0,i.jsx)("kbd",{children:"Ctrl"}),"+",(0,i.jsx)("kbd",{children:"Shft"}),"+",(0,i.jsx)("kbd",{children:"M"})," in the SSMS query window before executing."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- IMPORTANT: Type Ctrl+Shft+M to enter parameters for the script.\r\n\r\nUSE [EdFi_API_Publisher_Configuration]\r\nGO\r\n\r\n---------------------------------------------------------\r\n-- Create configuration table\r\n---------------------------------------------------------\r\nCREATE TABLE [dbo].[ConfigurationValue](\r\n    [ConfigurationKey] [nvarchar](450) NOT NULL,\r\n    [ConfigurationValue] [nvarchar](max) NULL,\r\n    [ConfigurationValueEncrypted] [varbinary](max) NULL,\r\n CONSTRAINT [PK_ConfigurationValue] PRIMARY KEY CLUSTERED ([ConfigurationKey] ASC)\r\n)\r\nGO\r\n\r\n---------------------------------------------------------\r\n-- Create encryption certificate and keys\r\n---------------------------------------------------------\r\n\r\n-- Create database master key\r\nCREATE MASTER KEY \r\nENCRYPTION BY PASSWORD = '< MasterKeyPassword, nvarchar, Change#Me%Now>';\r\n\r\n-- Create certificate\r\nCREATE CERTIFICATE EdFiApiPublisherConfigCert\r\n   WITH SUBJECT = 'Ed-Fi API Publisher Configuration Secrets';  \r\n\r\n-- Create a symmetric key for encryption\r\nCREATE SYMMETRIC KEY EdFiApiPublisherConfigKey\r\n    WITH ALGORITHM = AES_256  \r\n    ENCRYPTION BY CERTIFICATE EdFiApiPublisherConfigCert;  \r\n\r\n-------------------------------------------------------------------\n"})}),"\n",(0,i.jsx)(n.h2,{id:"create-the-encryption-user",children:"Create the Encryption User"}),"\n",(0,i.jsxs)(n.p,{children:['The configuration implementation for SQL Server provides the ability to encrypt sensitive values like API keys and secrets. A database level user named "EdFiEncryption" is created and granted the necessary permissions to perform all encryption and decryption of the configuration values on behalf of the caller through the ',(0,i.jsx)(n.code,{children:"dbo.GetConfigurationValue"})," and ",(0,i.jsx)(n.code,{children:"dbo.SetConfigurationValue"})," stored procedures (which are created in the next step)."]}),"\n",(0,i.jsx)(n.p,{children:"Execute the following script to create the database-level user account used for encryption."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"USE [EdFi_API_Publisher_Configuration]\r\nGO\r\nCREATE USER [EdFiEncryption] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]\r\nGO\r\nuse [EdFi_API_Publisher_Configuration]\r\nGO\r\nGRANT CONTROL ON CERTIFICATE::[EdFiApiPublisherConfigCert] TO [EdFiEncryption]\r\nGO\r\nuse [EdFi_API_Publisher_Configuration]\r\nGO\r\nGRANT VIEW DEFINITION ON SYMMETRIC KEY::[EdFiApiPublisherConfigKey] TO [EdFiEncryption]\r\nGO\r\nuse [EdFi_API_Publisher_Configuration]\r\nGO\r\nGRANT DELETE ON [dbo].[ConfigurationValue] TO [EdFiEncryption]\r\nGO\r\nuse [EdFi_API_Publisher_Configuration]\r\nGO\r\nGRANT INSERT ON [dbo].[ConfigurationValue] TO [EdFiEncryption]\r\nGO\r\nuse [EdFi_API_Publisher_Configuration]\r\nGO\r\nGRANT SELECT ON [dbo].[ConfigurationValue] TO [EdFiEncryption]\r\nGO\r\nuse [EdFi_API_Publisher_Configuration]\r\nGO\r\nGRANT UPDATE ON [dbo].[ConfigurationValue] TO [EdFiEncryption]\r\nGO\n"})}),"\n",(0,i.jsx)(n.h2,{id:"create-user-defined-functions-for-managing-encrypted-configuration-entries",children:"Create User-Defined Functions for Managing Encrypted Configuration Entries"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"CREATE OR ALTER PROCEDURE dbo.SetConfigurationValue \r\n    @configurationKey nvarchar(450), \r\n    @plaintext nvarchar(max),\r\n    @encrypt bit = 0\r\nWITH EXECUTE AS 'EdFiEncryption'\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRANSACTION\r\n\r\n    DELETE FROM dbo.ConfigurationValue\r\n    WHERE ConfigurationKey = @configurationKey;\r\n\r\n    IF @encrypt = 0\r\n        INSERT INTO dbo.ConfigurationValue(ConfigurationKey, ConfigurationValue)\r\n        VALUES (@configurationKey, @plaintext)\r\n    ELSE\r\n        BEGIN\r\n            -- Open the symmetric key with which to encrypt the data.\r\n            OPEN SYMMETRIC KEY EdFiApiPublisherConfigKey\r\n            DECRYPTION BY CERTIFICATE EdFiApiPublisherConfigCert;\r\n\r\n            DECLARE @encrypted varbinary(max);\r\n\r\n            -- Encrypt the value\r\n            SET @encrypted = EncryptByKey(Key_GUID('EdFiApiPublisherConfigKey'), \r\n                @plaintext, 1, HashBytes('SHA1', CONVERT(varbinary, @configurationKey)));\r\n\r\n            INSERT INTO dbo.ConfigurationValue(ConfigurationKey, ConfigurationValueEncrypted)\r\n            VALUES (@configurationKey, @encrypted)\r\n\r\n            CLOSE SYMMETRIC KEY EdFiApiPublisherConfigKey\r\n        END \r\n\r\n    COMMIT TRANSACTION;\r\nEND\r\nGO\r\n\r\nCREATE OR ALTER PROCEDURE dbo.GetConfigurationValues\r\n    @configurationKeyPrefix nvarchar(450) = null\r\nWITH EXECUTE AS 'EdFiEncryption'\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Open the symmetric key with which to encrypt the data.\r\n    OPEN SYMMETRIC KEY EdFiApiPublisherConfigKey\r\n    DECRYPTION BY CERTIFICATE EdFiApiPublisherConfigCert;\r\n\r\n    SELECT c.ConfigurationKey, \r\n        COALESCE(c.ConfigurationValue, \r\n            Convert(nvarchar, DecryptByKey(c.ConfigurationValueEncrypted, 1, HashBytes('SHA1', CONVERT(varbinary, c.ConfigurationKey)))))\r\n            AS ConfigurationValue\r\n    FROM dbo.ConfigurationValue c\r\n    WHERE ConfigurationKey LIKE COALESCE(@configurationKeyPrefix, '') + '%'\r\n\r\n    CLOSE SYMMETRIC KEY EdFiApiPublisherConfigKey\r\nEND\r\nGO\r\n\r\nGRANT EXECUTE ON [dbo].[GetConfigurationValues] TO [<Domain or Machine Name, nvarchar, DOMAIN_OR_MACHINE>\\<User Name, nvarchar, EdFiApiPublisher>]\r\nGRANT EXECUTE ON [dbo].[SetConfigurationValue] TO [<Domain or Machine Name, nvarchar, DOMAIN_OR_MACHINE>\\<User Name, nvarchar, EdFiApiPublisher>]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configure-api-connections",children:"Configure API Connections"}),"\n",(0,i.jsx)(n.p,{children:"Create new API connections by pasting the following SQL template into an SSMS query window and typing Ctrl+Shft+M to enter the necessary parameters. The resulting script can then be executed to create or update the specified API connection, with an encrypted key and secret."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"EXEC    [dbo].[SetConfigurationValue]\r\n        @configurationKey = N'/ed-fi/apiPublisher/connections/< ConnectionName, nvarchar, Name >/url',\r\n        @plaintext = N'< Url, nvarchar, http://localhost:54746/ >'\r\nGO\r\n\r\nEXEC    [dbo].[SetConfigurationValue]\r\n        @configurationKey = N'/ed-fi/apiPublisher/connections/< ConnectionName, nvarchar, Name >/key',\r\n        @plaintext = N'<Key, nvarchar, the_key>',\r\n        @encrypt = 1\r\nGO\r\n\r\nEXEC    [dbo].[SetConfigurationValue]\r\n        @configurationKey = N'/ed-fi/apiPublisher/connections/< ConnectionName, nvarchar, Name >/secret',\r\n        @plaintext = N'< Secret, nvarchar, the_secret >',\r\n        @encrypt = 1\r\nGO\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"SQL Server Configuration Store",src:r(3948).A+"",width:"2088",height:"408"})}),"\n",(0,i.jsx)(n.h2,{id:"configure-api-publisher",children:"Configure API Publisher"}),"\n",(0,i.jsxs)(n.p,{children:["To use the SQL Server Configuration Store, change the ",(0,i.jsx)(n.code,{children:"provider"})," setting in the ",(0,i.jsx)(n.em,{children:"configurationStoreSettings.json"})," file to ",(0,i.jsx)(n.code,{children:"sqlServer"})," and supply the connection string, as shown below:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\r\n  "configurationStore": {\r\n    "provider": "sqlServer",\r\n    "sqlServer": {\r\n      "connectionString": "Server=(local);Database=EdFi_API_Publisher_Configuration;Trusted_Connection=True"\r\n    }\r\n  }\r\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},3948:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/Sql-Server-configuration-store-example-95613f3d6ddf88924601547bb6e96112.png"},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var i=r(6540);const t={},o=i.createContext(t);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);