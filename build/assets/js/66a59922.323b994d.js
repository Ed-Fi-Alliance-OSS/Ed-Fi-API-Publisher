"use strict";(self.webpackChunked_fi_api_publisher=self.webpackChunked_fi_api_publisher||[]).push([[3791],{9874:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=t(4848),i=t(8453);const s={},o="Remediations",a={id:"tech/Remediations",title:"Remediations",description:"Remediations allow you to extend the API Publisher with custom behavior to remediate failed POST requests against the target API. The remediations are defined in a JavaScript file whose file system path is provided using the --remediationScriptFile command-line argument (or the remediationsScriptFile setting in the options section of the apiPublisherSettings.js file).",source:"@site/docs/tech/Remediations.md",sourceDirName:"tech",slug:"/tech/Remediations",permalink:"/Ed-Fi-API-Publisher/docs/tech/Remediations",draft:!1,unlisted:!1,editUrl:"https://github.com/ed-fi-alliance-oss/Ed-Fi-API-Publisher/tree/gh-pages/pages/docs/docs/tech/Remediations.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Known Limitations for Ed-Fi ODS/API 5.1-5.3 (Details)",permalink:"/Ed-Fi-API-Publisher/docs/tech/Known-Issues-Details"},next:{title:"How to use the TextFormatter class",permalink:"/Ed-Fi-API-Publisher/docs/tech/Use-TextFormatter-Serilog"}},d={},l=[{value:"Dependency",id:"dependency",level:2},{value:"Parameters",id:"parameters",level:2},{value:"FailureContext (input)",id:"failurecontext-input",level:3},{value:"RemediationPlan (output)",id:"remediationplan-output",level:3},{value:"Sample Remediations",id:"sample-remediations",level:2},{value:"Solution 1: Add Resource Items for Missing References",id:"solution-1-add-resource-items-for-missing-references",level:3},{value:"Solution 2: Remove the Unresolved References from the Request",id:"solution-2-remove-the-unresolved-references-from-the-request",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"remediations",children:"Remediations"}),"\n",(0,r.jsxs)(n.p,{children:["Remediations allow you to extend the API Publisher with custom behavior to remediate failed POST requests against the target API. The remediations are defined in a JavaScript file whose file system path is provided using the ",(0,r.jsx)(n.code,{children:"--remediationScriptFile"})," command-line argument (or the ",(0,r.jsx)(n.code,{children:"remediationsScriptFile"})," setting in the ",(0,r.jsx)(n.code,{children:"options"})," section of the ",(0,r.jsx)(n.em,{children:"apiPublisherSettings.js"})," file)."]}),"\n",(0,r.jsxs)(n.p,{children:["\u26a0\ufe0f",(0,r.jsx)(n.strong,{children:"This feature uses Node.js for JavaScript execution, and the JavaScript code does not run in a sandbox. You must take appropriate steps to only allow trusted remediation scripts to be executed."})]}),"\n",(0,r.jsx)(n.h2,{id:"dependency",children:"Dependency"}),"\n",(0,r.jsxs)(n.p,{children:["The remediations feature has a dependency on ",(0,r.jsx)(n.a,{href:"https://nodejs.org/en/",children:"Node.js"})," which must be available on the ",(0,r.jsx)(n.code,{children:"PATH"})," environment variable."]}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(n.h3,{id:"failurecontext-input",children:"FailureContext (input)"}),"\n",(0,r.jsxs)(n.p,{children:["The input parameter, ",(0,r.jsx)(n.code,{children:"failureContext"}),", contains information about the failed request. For example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\r\n  resourceUrl: "/ed-fi/disciplineActions",\r\n  requestBody: "{ ... }",  // Body of failing request is passed as string\r\n  responseStatusCode: 400,\r\n  responseBody: "{ message: \'Error message.\' }", // Body of error response is passed as string\r\n  sourceConnectionName: "MySourceApi",\r\n  targetConnectionName: "MyTargetApi"\r\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"remediationplan-output",children:"RemediationPlan (output)"}),"\n",(0,r.jsx)(n.p,{children:"The return value is a remediation plan containing an optional modified version of the original request and/or an array of additional requests to be POSTed against the target API. For example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'{\r\n  modifiedRequestBody: { ... }, // Optional - include if original request is modified\r\n  additionalRequests: [ // Optional - include if additional requests are to be performed\r\n    {\r\n      resource: \'/ed-fi/staffs\',\r\n      body: {\r\n        "staffUniqueId": "ABC123",\r\n        "firstName": "John",\r\n        "lastName": "Smith"\r\n      }\r\n    },\r\n    {\r\n      resource: \'/ed-fi/sections\',\r\n      body: {\r\n        ...\r\n      }\r\n    }\r\n  ]\r\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Upon return, the API Publisher will POST the returned requests in sequence against the specified resources on the target API, before retrying the original failing request."}),"\n",(0,r.jsx)(n.h2,{id:"sample-remediations",children:"Sample Remediations"}),"\n",(0,r.jsx)(n.p,{children:'The following remediations module demonstrates how the remediation functions are written for specific resources and status codes. The functions will receive information about the failed POST request and return a "remediation plan" containing zero or more POST requests to be applied against the target API.'}),"\n",(0,r.jsxs)(n.p,{children:["The sample is based on a scenario encountered while publishing data from a state education agency to a local education agency. Some of the discipline actions being published were for a student who had been registered at another local education agency. Because of this, some of the discipline actions for this student referenced staff (in the ",(0,r.jsx)(n.code,{children:"staffs"})," collection of the resource) that worked for the other local education agency and were not available for publishing."]}),"\n",(0,r.jsx)(n.h3,{id:"solution-1-add-resource-items-for-missing-references",children:"Solution 1: Add Resource Items for Missing References"}),"\n",(0,r.jsxs)(n.p,{children:["To remediate these POST requests failing with a ",(0,r.jsx)(n.code,{children:"400 Bad Request"})," status against the ",(0,r.jsx)(n.em,{children:"/ed-fi/disciplineActions"})," resource, the following remediation module will create minimal staff resource items for the unresolveable staff associations:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'module.exports = {\r\n  // Remediate requests \r\n  \'/ed-fi/disciplineActions/400\': async (failureContext) => {\r\n    // Parse the request/response data\r\n    const request = JSON.parse(failureContext.requestBody);\r\n    const response = JSON.parse(failureContext.responseBody); \r\n\r\n    // Ensure the error message contains the text associated with the failure we\'re remediating\r\n    if (response.message.includes("Validation of \'DisciplineActionStaffs\' failed.") \r\n      && response.message.includes("Staff reference could not be resolved.")) {\r\n      \r\n      // Define a regular expression to extract the array index values from the validation message\r\n      const indexRegEx = /DisciplineActionStaff\\[(?<Index>[0-9]+)\\]/gi;\r\n\r\n      // Perform regular expression matching\r\n      const matches = [...response.message.matchAll(indexRegEx)];\r\n\r\n      // Prepare the additional requests of the remediation plan\r\n      return { \r\n        additionalRequests:\r\n          // Map the missing staff into requests for the remediation\r\n          matches.map(m => { \r\n            return {\r\n              resource: "/ed-fi/staffs", \r\n              body: { \r\n                staffUniqueId: `${request.staffs[m.groups[\'Index\']].staffReference.staffUniqueId}`, \r\n                firstName: "Unknown Staff", \r\n                lastSurname: "Unknown Staff" \r\n              }\r\n            }\r\n          })\r\n      };\r\n    }\r\n\r\n    // Take no action for the current request\r\n    return null;\r\n  }\r\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"solution-2-remove-the-unresolved-references-from-the-request",children:"Solution 2: Remove the Unresolved References from the Request"}),"\n",(0,r.jsxs)(n.p,{children:["To remediate these POST requests failing with a ",(0,r.jsx)(n.code,{children:"400 Bad Request"})," status against the ",(0,r.jsx)(n.em,{children:"/ed-fi/disciplineActions"})," resource, the following remediation module will remove the ",(0,r.jsx)(n.code,{children:"staffs"})," child collection items for the unresolveable staff associations:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\r\n  // Remediate requests \r\n  '/ed-fi/disciplineActions/400': async (failureContext) => {\r\n    // Parse the request/response data\r\n    const request = JSON.parse(failureContext.requestBody);\r\n    const response = JSON.parse(failureContext.responseBody); \r\n\r\n    // Ensure the error message contains the text associated with the failure we're remediating\r\n    if (response.message.includes(\"Validation of 'DisciplineActionStaffs' failed.\") \r\n      && response.message.includes(\"Staff reference could not be resolved.\")) {\r\n      \r\n      // Define a regular expression to extract the array index values from the validation message\r\n      const indexRegEx = /DisciplineActionStaff\\[(?<Index>[0-9]+)\\]/gi;\r\n\r\n      // Perform regular expression matching\r\n      const matches = [...response.message.matchAll(indexRegEx)];\r\n\r\n      // Delete the offending entries in the array (NOTE: does not remove the array items)\r\n      matches.forEach(m => delete request.staffs[m.groups['Index']]);\r\n\r\n      // Filter the array down to just the non-deleted items, and reassign\r\n      request.staffs = request.staffs.filter(i => i != null);\r\n\r\n      // Return the modified request body\r\n      return { modifiedRequestBody: request };\r\n    }\r\n\r\n    // Take no action for the current request\r\n    return null;\r\n  }\r\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(6540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);